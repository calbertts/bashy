execute -node 'console.log("hola")'

fn:
  hello -oh --up-so="OK" -cl -lw "param1" 2 3 4 < (
    print -o $input
    )
    > count
    > sort -asc

$simple = 'Simple Comma'
$double = "Double Comma"
$result = 1.456
$brith = 1987
$underAge = false
$math = # $birth + print "NO" < "input"
$emptyArrayVar = []
$arrayVar = [
  1,
  $he,
  (
    hello 1 2 3 4 5 < "input"
  ),
  true
]
$emptyObj = {}
$obj = {
  one: 1
  two: 2.3
  [$hey]: $template
  command: (
    print "comamnd result"
  )
  [`tell me $why`]: true
  [(
    print "TheKey"
  )]: "wow"
  aFunctionObj: !myfn
}

$commandResult = (
  print "OK" < (
    print $input
    > size
  )
  > count
)

hello: name - {upperCase: "-up"}
  print $name

  $template = `Hello: $var, an expression: ${(
    print $hey
    > count < $input
  )}`

increment: param1, param2
  print (
    print $ONE
    > count -rw
    > verify
  ) $otherParam
  hello "myname" "other"
  $wok = 1
  list

  store $file
  print 1234
  read
  hello "Carlos" < (
    print $input
    > count
  )

  print "end of function"

increment "hey" "tow"

$out1, $out2, $out3, $out4 = 
  | print "OK"
  | request "GET" "http://google.com"
  | hello "Carlos" < (
      print $input
      > count
    )
  | count

[$array] =
  | print "OK"
  | request "GET" "http://google.com"
  | hello "Carlos" < (
      print $input
      > count
    )
  | count

otherFunc: p1
  print $m

  hello
  read < (
    print "omg"
  )

  [$outputs:2] = 
    | print "OK"
    | request "GET" "http://google.com"
    | hello "Carlos" < (
        print $input
        > store
      )
    | read

  $returnValue = "valor"


[$salida] = 
  | print "first" "second" true 1.3 456 < (
      print "an input"
    )
  | request "GET" "http://google.com"
  | hello "Carlos" < "Input here"
